import { GetServerSidePropsContext, type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import {
  signIn,
  signOut,
  useSession,
  getProviders,
  getSession,
} from "next-auth/react";
import { api } from "../utils/api";
import { ProvidersType, UserType } from "../types/mainTypes";

type HomeProps = {
  user: UserType;
  providers: ProvidersType;
};

const Home: NextPage = (props) => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const { providers, user } = props as HomeProps;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='flex min-h-screen flex-col items-center justify-center'>
        <div className='container flex flex-col items-center justify-center gap-12 px-4 py-16 '>
          <h1 className='text-5xl font-extrabold tracking-tight text-white'>
            Design <span className='text-mediumorchid'>System </span>
            Monorepo
          </h1>
          <div className='grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8'>
            <div className='flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white'>
              <h3 className='text-2xl font-bold'>Enter the App →</h3>
              <div className='text-lg'>
                Sign in with your Google or Discord account and explore the main
                App.
              </div>
              <button
                className='rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20'
                onClick={
                  user
                    ? () => void signOut()
                    : () => void signIn("", { callbackUrl: "/posts" })
                }
              >
                {user ? "Sign out" : "Sign in"}
              </button>
            </div>
            <Link
              className='flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20'
              href='https://create.t3.gg/en/introduction'
              target='_blank'
            >
              <h3 className='text-2xl font-bold'>Documentation →</h3>
              <div className='text-lg'>
                Learn more about this monorepo's architecture and the shared UI
                component library.
              </div>
            </Link>
          </div>
          <div className='flex flex-col items-center gap-2'>
            <p className='text-2xl text-white'>
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className='flex flex-col items-center justify-center gap-4'>
      <p className='text-center text-2xl text-white'>
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
    </div>
  );
};

export async function getServerSideProps(ctx: GetServerSidePropsContext) {
  const providers = await getProviders();
  const session = await getSession(ctx);

  if (!session) {
    return {
      props: {},
    };
  }

  const { user } = session;

  return {
    props: {
      providers,
      user,
    },
  };
}
